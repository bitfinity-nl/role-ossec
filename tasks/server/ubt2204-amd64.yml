---
# Title: OSSEC server
#
# Author: Bitfinity / L. Rutten 
# Owner: Bitfinity / L. Rutten
#
# File: tasks/server/ubt2204-amd64.yml
#
# Description:
#   This taskfile contains te tasks
#   for installing a OSSEC server.
#
#- name: "server/01-mysql-server.yml"
#  include_tasks: server/01-mysql-server.yml
  
- name: "Add APT packages requirements"
  ansible.builtin.apt:
    pkg:
    - build-essential
    - make
    - zlib1g-dev
    - libpcre2-dev
    - libevent-dev
    - libssl-dev
    - libsystemd-dev
    - jq
    # -- for database support --
    #- mysql-dev
    #- postgresql-dev
    #- libsqlite3-dev
    state: present
  
- name: "Remove existing installation folders when exists"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /opt/ossec-install
#    - /opt/ossec-tools/pcre2
    #- /tmp/pcre2

- name: "Download latest source of OSSEC"
  ansible.builtin.git:
    repo: 'https://github.com/ossec/ossec-hids.git'
    dest: /opt/ossec-install

- name: "Download latest source of PCRE2 support"
  ansible.builtin.git:
    repo: 'https://github.com/PCRE2Project/pcre2.git'
    dest: /opt/ossec-tools/pcre2

- name: Move pcre2 to /opt/ossec-install/
  command: mv /opt/ossec-tools/pcre2 /opt/ossec-install/src/external/
  
- name: "Transfer configuration files to client"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'server/preloaded-vars.conf.j2', dest: '/opt/ossec-install/etc/preloaded-vars.conf', desc: 'unattended source installation ' }
    - { src: 'server/ossec-control.service.j2', dest: '/etc/systemd/system/ossec-control.service', desc: 'systemd service' }
    
- name: "Install or upgrade ossec server"
  ansible.builtin.shell: cd /opt/ossec-install/ ; PCRE2_SYSTEM=yes ./install.sh

- name: "Create symbolic link from /opt/ossec-install/etc to /etc/ossec"
  ansible.builtin.file:
    src: /var/ossec/etc
    dest: /etc/ossec
    owner: root
    group: root
    mode: '0755'
    state: link
    
#- name: "Initial basic configuration settings (/var/ossec/etc/ossec.conf)"
#  ansible.builtin.replace:
#    path: /var/ossec/etc/ossec.conf
#    regexp: "{{ item.find }}"
#    replace: '{{ item.replace }}'
#    backup: true
#  with_items:
    #- { field: 'email_notification>', find: 'yes', replace: '{{ ossec_email_notification }}' }
#    - { field: 'email_to', find: 'daniel\.cid@example\.com', replace: '{{ ossec_email_to }}' }
#    - { field: 'smtp_server', find: 'smtp\.example\.com\.', replace: '{{ ossec_smtp_server }}' }
#    - { field: 'email_from', find: 'ossecm@ossec\.example\.com\.', replace: '{{ ossec_email_from }}' }


- name: "Add ip to allowlist in global section (/var/ossec/etc/ossec.conf)"
  ansible.builtin.blockinfile:
    path: /var/ossec/etc/ossec.conf
    marker: "    <!-- {mark} ANSIBLE MANAGED BLOCK - Allow list {{ item.name }}-->"
    insertbefore: "</global>"
    block: |2
          <allow_list>{{ item.ip }}</allow_list>
  loop: "{{ ossec_clients_allow_list }}"

- name: "Add ip to remote systelog in global section (/var/ossec/etc/ossec.conf)"
  ansible.builtin.blockinfile:
    path: /var/ossec/etc/ossec.conf
    marker: "    <!-- {mark} ANSIBLE MANAGED BLOCK - Remote syslog {{ item.name }}-->"
    insertbefore: "</remote>"
    block: |2
          <allowed-ips>{{ item.ip }}</allowed-ips>
  loop: "{{ ossec_clients_allow_list }}"

- name: "Add setting for repeating offenders Active Response section (/var/ossec/etc/ossec.conf)"
  ansible.builtin.blockinfile:
    path: /var/ossec/etc/ossec.conf
    marker: "    <!-- {mark} ANSIBLE MANAGED BLOCK - Repeated offenders -->"
    insertafter: "<!-- Active Response Config -->"
    block: |2
          <active-response>
            <!-- Specify a comma seperated list of timeouts per
              - re-incidence (in minutes).
              -->
            <repeated_offenders>{{ ossec_repeated_offenders }}</repeated_offenders>
          </active-response>

- name: "Add PSAD settings to Active Response section (/var/ossec/etc/ossec.conf)"
  ansible.builtin.lineinfile:
    path: /var/ossec/etc/ossec.conf
    #regexp: '<include>local_rules\.xml<\/include>'
    insertbefore: '<include>local_rules.xml</include>'
    line: '    <include>psad_rules.xml</include>'
    state: present

- name: "Enable OSSEC service"
  ansible.builtin.systemd:
    name: ossec-control.service
    daemon_reload: true
    enabled: true
    state: started

- name: "Configure UFW for OSSEC manager"
  community.general.ufw:
    rule: allow
    port: '1514'
    proto: udp

- name: "Install OSSEC Agent (Include tasks/agent/ossec-agent-ubuntu-2204.yml)"
  include_tasks: agent/ossec-agent-ubuntu-2204.yml
